apply plugin: 'com.android.application'

android {
    lintOptions {
        abortOnError false
    }

    signingConfigs {
        config {
            keyAlias 'adguard'
            keyPassword 'adguard'
            storeFile file('../adguard.keystore')
            storePassword 'adguard'
        }
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        targetSdkVersion 27
        applicationId 'com.adguard.android.contentblocker'
        versionName "2.2.5"
        signingConfig signingConfigs.config
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
        }

        debug {
            debuggable true
            minifyEnabled false
        }
    }

    def checkFilterVersionsUrl = "/extension/android-content-blocker/filters.json"
    def getFilterUrl = "/extension/android-content-blocker/filters/{0}_optimized.txt"

    def reportToolUrl = '/new_issue.html'

    def eulaUrl = "action=eula&app=content_blocker"
    def privatePolicyUrl = "action=private&app=content_blocker"

    def websiteUrl = "action=home&app=content_blocker"
    def forumUrl = "action=forum&app=content_blocker"

    def githubUrl = "action=github&app=content_blocker"
    def githubIssueUrl = "action=issue&app=content_blocker"

    def otherAdguardProductUrl = "action=other_product&app=content_blocker"

    flavorDimensions "buildChannel",  "serverChannel"
    productFlavors {

        yandex_api16 {
            minSdkVersion 16
            versionCode 16002205
            dimension "buildChannel"
        }

        samsung_api21 {
            minSdkVersion 21
            versionCode 21002205
            dimension "buildChannel"
        }

        prodBackend {
            dimension "serverChannel"

            def filtersHost = 'https://filters.adtidy.org'
            def reportToolHost = 'https://reports.adguard.com'
            def forwardHost = "https://adguard.com/forward.html"

            buildConfigField "String", "checkFilterVersionsUrl", '"' + filtersHost + checkFilterVersionsUrl + '"'
            buildConfigField "String", "getFilterUrl", '"' + filtersHost + getFilterUrl + '"'

            buildConfigField "String", "reportToolUrl", '"' + reportToolHost + reportToolUrl + '"'

            buildConfigField "String", "eulaUrl", '"' + forwardHost + '?' + eulaUrl + '"'
            buildConfigField "String", "privateUrl", '"' + forwardHost + '?' + privatePolicyUrl + '"'
            buildConfigField "String", "websiteUrl", '"' + forwardHost + '?' + websiteUrl + '"'
            buildConfigField "String", "forumUrl", '"' + forwardHost + '?' + forumUrl + '"'

            buildConfigField "String", "githubUrl", '"' + forwardHost + '?' + githubUrl + '"'
            buildConfigField "String", "githubIssueUrl", '"' + forwardHost + '?' + githubIssueUrl + '"'

            buildConfigField "String", "otherAdguardProductUrl", '"' + forwardHost + '?' + otherAdguardProductUrl + '"'
        }

        devBackend {
            dimension "serverChannel"

            def filtersHost = 'http://testfilters.adtidy.org'
            def reportToolHost = 'https://reports.adguard.com'
            def forwardHost = "https://dev.adguard.com/forward.html"

            buildConfigField "String", "checkFilterVersionsUrl", '"' + filtersHost + checkFilterVersionsUrl + '"'
            buildConfigField "String", "getFilterUrl", '"' + filtersHost + getFilterUrl + '"'

            buildConfigField "String", "reportToolUrl", '"' + reportToolHost + reportToolUrl + '"'

            buildConfigField "String", "eulaUrl", '"' + forwardHost + '?' + eulaUrl + '"'
            buildConfigField "String", "privateUrl", '"' + forwardHost + '?' + privatePolicyUrl + '"'
            buildConfigField "String", "websiteUrl", '"' + forwardHost + '?' + websiteUrl + '"'
            buildConfigField "String", "forumUrl", '"' + forwardHost + '?' + forumUrl + '"'

            buildConfigField "String", "githubUrl", '"' + forwardHost + '?' + githubUrl + '"'
            buildConfigField "String", "githubIssueUrl", '"' + forwardHost + '?' + githubIssueUrl + '"'

            buildConfigField "String", "otherAdguardProductUrl", '"' + forwardHost + '?' + otherAdguardProductUrl + '"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Apache commons
    //noinspection GradleDependency
    implementation 'org.apache.commons:commons-lang3:3.5'
    implementation 'org.apache.commons:commons-collections4:4.1'
    implementation 'commons-io:commons-io:2.5'

    // Android library
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:customtabs:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:design:27.1.1'

    // Logger
    implementation 'org.slf4j:slf4j-android:1.7.7'

    // Json
    implementation 'org.codehaus.jackson:jackson-core-lgpl:1.9.13'
    implementation 'org.codehaus.jackson:jackson-mapper-lgpl:1.9.13'

    testImplementation 'junit:junit:4.12'
}
